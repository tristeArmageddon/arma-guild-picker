{"version":3,"sources":["components/NavBar.jsx","components/DeprecationModal.jsx","components/Layout.jsx","components/SkillCompareTable.jsx","components/PerkCompareTable.jsx","components/LanguageCompareTable.jsx","components/GuildPicker.jsx","components/GuildCompare.jsx","components/SkillPicker.jsx","theme.js","App.jsx","serviceWorker.js","index.js"],"names":["useState","React","withRouter","withStyles","theme","appBar","appTitle","paddingRight","breakpoints","down","fontSize","link","textDecoration","color","opacity","fontWeight","margin","padding","sideNavLink","horizontalNavLinks","display","menuButton","width","up","activeLink","appBarContainer","flexDirection","classes","drawerOpen","setDrawerOpen","navLinks","to","label","HorizonalNavLinks","map","className","activeClassName","exact","Button","SideNavLinks","ListItem","key","Drawer","open","onClose","List","AppBar","position","IconButton","hidden-lg","aria-label","edge","onClick","Toolbar","Typography","variant","modalBody","textAlign","top","left","transform","maxWidth","minWidth","bgcolor","border","boxShadow","p","bodyText","size","auRevior","bodyLink","children","setOpen","handleClose","Modal","aria-labelledby","aria-describedby","Paper","square","id","href","target","layout","backgroundColor","palette","background","default","overflow","contentWrapper","Grid","container","item","xs","SkillCompareTable","skillKey","Object","keys","data","skills","group","foundSkill","find","k","extended","sk","guildGroup","gSelected","branchesFromSk","branching","this","findGroupAndLabel","proficiency","result","gNumber","proficiencyKey","forEach","findBranchesFrom","props","g1Key","g2Key","g1Value","g2Value","proficiencies","i","skillsToObj","g1Label","g2Label","mungedSkills","mungeSkills","elevation","m","root","Table","table","TableHead","TableRow","TableCell","cell","TableBody","skillGroups","skillGroup","titleCell","values","row","style","Tooltip","disableFocusListener","disableTouchListener","title","Chip","chip","Component","textTransform","marginLeft","height","marginTop","paddingLeft","content","PerkCompareTable","perks","prk","perksToObj","mungedPerks","mungePerks","length","noContent","component","scope","LanguageCompareTable","languages","lng","languagesToObj","mungedLanguages","mungeLanguages","GuildPicker","state","guild","subguild","toggleSelection","event","setState","name","value","newQuery","queryString","stringify","history","location","pathname","push","search","parse","guilds","subguilds","tableConfig","justifyContent","spacing","sm","FormHelperText","FormControl","formControl","Select","onChange","inputProps","sortedguilds","gKey","MenuItem","karma","documentation","select","sortedsubguilds","lg","flexGrow","marginRight","primary","main","GuildCompare","guild1","guild2","SkillPicker","selectedSkills","flattenGuild","skillPrefix","profLevel","skill","itemIndex","indexOf","splice","clearSelection","findGuildsForSkills","skillsMatched","includes","karmaLabel","linkTo","sectionTitle","selectedCount","clearSelected","skillGroupTitle","chipContainer","guildCombination","guildOption","guildOptionLink","guildOptionText","float","createTheme","themeOverrides","App","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5ddefae.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { withRouter } from \"react-router\";\r\n\r\nconst { useState } = React;\r\n\r\nconst styles = (theme) => ({\r\n  appBar: {\r\n    ...theme.appBar\r\n  },\r\n  appTitle: {\r\n    paddingRight: 32,\r\n    [theme.breakpoints.down('xs')]: {\r\n      fontSize: 12,\r\n      paddingRight: 12,\r\n    }\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'inherit',\r\n    opacity: 0.69,\r\n    '&>button': {\r\n      fontWeight: 600,\r\n      margin: '0 4px',\r\n      padding: '4px',\r\n    },\r\n  },\r\n  sideNavLink: {\r\n    textDecoration: 'none',\r\n    '&>button > span': {\r\n      color: 'white',\r\n      [theme.breakpoints.down('sm')]: {\r\n        fontSize: 10,\r\n      }\r\n    },\r\n  },\r\n  horizontalNavLinks: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    }\r\n  },\r\n  menuButton: {\r\n    width: 64,\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    }\r\n  },\r\n  activeLink: {\r\n    opacity: 1,\r\n  },\r\n  appBarContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n});\r\n\r\nconst NavBar = ({\r\n  classes,\r\n}) => {\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const navLinks = [\r\n    {\r\n      to: '/arma-guild-picker/',\r\n      label: 'Guild Picker'\r\n    },\r\n    {\r\n      to: '/arma-guild-picker/guild-compare/',\r\n      label: 'Guild Compare'\r\n    },\r\n    {\r\n      to: '/arma-guild-picker/skill-picker/',\r\n      label: 'Skill Picker'\r\n    },\r\n  ];\r\n\r\n  const HorizonalNavLinks = navLinks.map(({to, label}) => (\r\n    <NavLink to={to} className={classes.link} activeClassName={classes.activeLink} exact>\r\n      <Button color=\"inherit\">\r\n        {label}\r\n      </Button>\r\n    </NavLink>\r\n  ));\r\n\r\n  const SideNavLinks = navLinks.map(({to, label}) => (\r\n    <ListItem key={to}>\r\n      <NavLink to={to} className={classes.sideNavLink} activeClassName={classes.activeLink} exact>\r\n        <Button color=\"inherit\">\r\n          {label}\r\n        </Button>\r\n      </NavLink>\r\n    </ListItem>\r\n  ));\r\n\r\n  return(\r\n    <>\r\n      <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)}>\r\n        <List>\r\n          {SideNavLinks}\r\n        </List>\r\n      </Drawer>\r\n      <AppBar position=\"static\">\r\n        <div className={classes.appBarContainer}>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            hidden-lg=\"true\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={() => setDrawerOpen(!drawerOpen)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Toolbar className={classes.appBar}>\r\n            <Typography className={classes.appTitle} variant=\"h6\" color=\"inherit\">\r\n              Armageddon MUD Skills & Guilds\r\n            </Typography>\r\n            <div className={classes.horizontalNavLinks}>\r\n              {HorizonalNavLinks}\r\n            </div>\r\n          </Toolbar>\r\n        </div>\r\n      </AppBar>\r\n    </>\r\n  )\r\n}\r\nexport default withRouter(withStyles(styles)(NavBar));\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst styles = (theme) => ({\r\n  modalBody:{\r\n    textAlign: 'center',\r\n    position: 'absolute !important',\r\n    top: '40%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '80%',\r\n    maxWidth: 900,\r\n    minWidth: 200,\r\n    padding: 20,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #ff',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  },\r\n  bodyText: {\r\n    size: '1rem'\r\n  },\r\n  auRevior: {\r\n    fontSize: '0.75rem'\r\n  },\r\n  bodyLink: {\r\n    color: 'darkOrange'\r\n  }\r\n});\r\nconst DeprecationModal = ({\r\n  theme,\r\n  children,\r\n  classes,\r\n}) => {\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return(\r\n    <div>\r\n    <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Paper square className={classes.modalBody}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\">\r\n            Deprecation Notice\r\n          </Typography>\r\n          <br/>\r\n          <Typography id=\"modal-modal-description\" variant=\"body\" className={classes.bodyText}>\r\n              This tool is no longer maintained. I've passed the torch to a current player working on another guild picker <a className={classes.bodyLink} href=\"https://harleyndavis.github.io/arma-character-tool\" target=\"_blank\">here</a> (hosting may change, will try to keep this up to date).\r\n              <br/>\r\n              <p className={classes.auRevior}>\r\n              Armageddon MUD is a 30-year old telnet based game which was influential to me growing up, but I've quit playing due to disagreements with current staff. Shout out to Sanvean, Calavera, Nauta, ShaLeah, Satansfish, SweetlySiren, Friendly Bee and many other great staff and players I have met either in person or virtually on this game with such an immense legacy. I hope the game becomes an amenable environment to the many great players it has lost so that they might return, and continues to welcome new players. Armageddon is a game far greater than any one set of staff or players involved in it at any given time.\r\n              <br/>\r\n              <br/>\r\n              Another great RPI MUD to consider besides Armageddon is <a className={classes.bodyLink} target=\"_blank\" href=\"http://harshlands.net/wordpress/\">Harshlands</a>, which has a less Dune/Dark Sun like setting and is more classically me<strong>die</strong>val.\r\n            </p>\r\n          </Typography>\r\n          <br/><br/>\r\n          <div>\r\n        <Button className={classes.bodyLink} onClick={handleClose}>Close</Button>\r\n          </div>\r\n        </Paper>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\nexport default withStyles(styles)(DeprecationModal);\r\n","import React from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport NavBar from './NavBar'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DeprecationModal from './DeprecationModal';\r\n\r\nconst styles = (theme) => ({\r\n  layout: {\r\n    backgroundColor: theme.palette.background.default,\r\n    overflow: 'hidden'\r\n  },\r\n  contentWrapper: {\r\n    [theme.breakpoints.down('lg')]: {\r\n      maxWidth: 1100,\r\n      margin: '0 auto'\r\n    }\r\n  },\r\n});\r\nconst Layout = ({\r\n  theme,\r\n  children,\r\n  classes,\r\n}) => {\r\n  return(\r\n    <div>\r\n      <DeprecationModal/>\r\n      <Grid container className={classes.layout}>\r\n        <Grid item xs={12}>\r\n          <NavBar />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div className={classes.contentWrapper}>\r\n            {children}\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\nexport default withStyles(styles)(Layout);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '25%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    padding: 8,\r\n  },\r\n  titleCell: {\r\n    textTransform: 'capitalize',\r\n    padding: 8,\r\n    backgroundColor: '#aaaaaa21',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n  },\r\n  chip: {\r\n    backgroundColor: 'rgb(48, 48, 48)',\r\n    fontSize: 8,\r\n    marginLeft: 8,\r\n    padding: 2,\r\n    height: 16,\r\n    marginTop: -1,\r\n    [theme.breakpoints.down('xs')]: {\r\n      marginLeft: 3,\r\n      fontSize: 7,\r\n      height: 13,\r\n    },\r\n    '&> span': {\r\n      paddingLeft: 4,\r\n      paddingRight: 4,\r\n      [theme.breakpoints.down('xs')]: {\r\n        paddingLeft: 2,\r\n        paddingRight: 2\r\n      }\r\n    },\r\n    '&> span::after': {\r\n      content: '\"BRANCH\"',\r\n      [theme.breakpoints.down('xs')]: {\r\n          content: '\"B\"',\r\n      }\r\n    }\r\n  }\r\n});\r\nclass SkillCompareTable extends Component {\r\n\r\n  findGroupAndLabel(skillKey) {\r\n    for (let group of Object.keys(data.skills)) {\r\n      const foundSkill = Object.keys(data.skills[group]).find((k) => k === skillKey)\r\n      if (foundSkill) {\r\n        return {\r\n          group,\r\n          label: data.skills[group][foundSkill].label,\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  findBranchesFrom({extended, sk, guildGroup, gSelected }) {\r\n    if (!extended) return;\r\n    const branchesFromSk = data[guildGroup][gSelected].branching[sk];\r\n    const {\r\n      group,\r\n      label,\r\n    } = this.findGroupAndLabel(branchesFromSk);\r\n    return data.skills[group][branchesFromSk].label\r\n  }\r\n\r\n  skillsToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    proficiency,\r\n    result = {},\r\n    extended = false,\r\n    gNumber = 1,\r\n  }) {\r\n    const proficiencyKey = `${extended ? 'ex': ''}${proficiency}`;\r\n    if (data[guildGroup] && data[guildGroup][gSelected][proficiencyKey]) {\r\n      data[guildGroup][gSelected][proficiencyKey].forEach(sk => {\r\n        const {\r\n          group,\r\n          label,\r\n        } = this.findGroupAndLabel(sk);\r\n\r\n        result[group] = result[group] || {};\r\n        result[group][sk] = {\r\n          [`g${gNumber}Skill`]: label,\r\n          [`g${gNumber}SkillLevel`]: proficiency,\r\n          [`g${gNumber}SkillBranchesFrom`]: this.findBranchesFrom({ extended, sk, guildGroup, gSelected }),\r\n          group,\r\n          ...result[group][sk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeSkills() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (let proficiency of data.proficiencies) {\r\n      for (var i = 0; i < 2; i++) {\r\n        const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n        const gSelected = i === 0 ? g1Value : g2Value;\r\n        const gNumber = i + 1;\r\n        for (let extended of [true, false]) {\r\n          result = this.skillsToObj({result, guildGroup, gSelected, proficiency, extended, gNumber})\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n    const mungedSkills = this.mungeSkills();\r\n    return (\r\n      <Paper square elevation={3} m={3} className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Skills\r\n              </TableCell>\r\n              <TableCell className={classes.cell}/>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.skillGroups.map(skillGroup => (\r\n              <>\r\n                <TableRow key={skillGroup}>\r\n                  <TableCell className={classes.titleCell}>\r\n                    {skillGroup}\r\n                  </TableCell>\r\n                  <TableCell className={classes.titleCell} />\r\n                  <TableCell className={classes.titleCell} />\r\n                  <TableCell className={classes.titleCell} />\r\n                </TableRow>\r\n                {mungedSkills[skillGroup] && Object.values(mungedSkills[skillGroup]).map(row => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g1SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g1SkillBranchesFrom'] && row['g1Skill']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g1Skill']}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g1Skill']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g1SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g1SkillBranchesFrom']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g1SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g1SkillLevel']}\r\n                            {row['g1SkillBranchesFrom'] && <Chip className={classes.chip} />}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g1SkillLevel']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g2SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g2SkillBranchesFrom'] && row['g2Skill']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g2Skill']}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g2Skill']\r\n                    }\r\n                    </TableCell>\r\n                    <TableCell\r\n                      className={classes.cell}\r\n                      style={{\r\n                        backgroundColor: row['g2SkillBranchesFrom'] ? 'rgba(255, 236, 179, 0.2)' : 'inherit'\r\n                      }}\r\n                    >\r\n                    {\r\n                      row['g2SkillBranchesFrom']\r\n                      ? (\r\n                        <Tooltip\r\n                          disableFocusListener disableTouchListener \r\n                          title={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                          aria-label={`branches from ${row['g2SkillBranchesFrom']}`}\r\n                        >\r\n                          <div>\r\n                            {row['g2SkillLevel']}\r\n                            {row['g2SkillBranchesFrom'] && <Chip className={classes.chip} />}\r\n                          </div>\r\n                        </Tooltip>\r\n                      ) : row['g2SkillLevel']\r\n                    }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(SkillCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass PerkCompareTable extends Component {\r\n  perksToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    gNumber = 1,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].perks) {\r\n      data[guildGroup][gSelected].perks.forEach(prk => {\r\n        result[prk] = {\r\n          [`g${gNumber}Perk`]: data.skills.perks[prk].label,\r\n          ...result[prk],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungePerks() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n    for (var i = 0; i < 2; i++) {\r\n      const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n      const gSelected = i === 0 ? g1Value : g2Value;\r\n      const gNumber = i + 1;\r\n      result = this.perksToObj({result, guildGroup, gSelected, gNumber})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedPerks = this.mungePerks();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Perks\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Perks\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedPerks || mungedPerks.length === 0) && (\r\n              <TableRow key=\"noPerks\">\r\n                <Typography className={classes.noContent}>Neither group has perks</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedPerks && mungedPerks.length > 0  && mungedPerks.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row['g1Perk']}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row['g2Perk']}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(PerkCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport data from '../data/data.json'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst styles = (theme) => ({\r\n  cell: {\r\n    width: '50%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      padding: 4,\r\n      fontSize: '0.65rem',\r\n      maxWidth: 65,\r\n      paddingRight: '4px !important'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: 8,\r\n    },\r\n  },\r\n  noContent: {\r\n    padding: '1rem',\r\n    textAlign: 'center',\r\n    width: '100%'\r\n  }\r\n});\r\nclass LanguageCompareTable extends Component {\r\n  languagesToObj({\r\n    guildGroup,\r\n    gSelected,\r\n    gNumber = 1,\r\n    result = {},\r\n  }) {\r\n    if (data[guildGroup] && data[guildGroup][gSelected].languages) {\r\n      data[guildGroup][gSelected].languages.forEach(lng => {\r\n        result[lng] = {\r\n          [`g${gNumber}Language`]: data.skills.languages[lng].label,\r\n          ...result[lng],\r\n        }\r\n      })\r\n    }\r\n    return result;\r\n  }\r\n\r\n  mungeLanguages() {\r\n    const {\r\n      g1Key,\r\n      g2Key,\r\n      g1Value,\r\n      g2Value,\r\n    } = this.props;\r\n\r\n    let result = {};\r\n      for (var i = 0; i < 2; i++) {\r\n        const guildGroup = `${i === 0 ? g1Key : g2Key}s`\r\n        const gSelected = i === 0 ? g1Value : g2Value;\r\n        const gNumber = i + 1;\r\n        result = this.languagesToObj({result, guildGroup, gSelected, gNumber})\r\n    }\r\n    return Object.values(result);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      g1Label,\r\n      g2Label,\r\n      g1Key,\r\n      g2Key,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const mungedLanguages = this.mungeLanguages();\r\n    return (\r\n      <Paper square className={classes.root}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className={classes.cell}>\r\n                {g1Label} Languages\r\n              </TableCell>\r\n              <TableCell className={classes.cell}>\r\n                {g2Label} Languages\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {(!mungedLanguages || mungedLanguages.length === 0) && (\r\n              <TableRow key=\"noLanguages\">\r\n                <Typography className={classes.noContent}>Neither group has bonus languages</Typography>\r\n              </TableRow>\r\n            )}\r\n            {mungedLanguages && mungedLanguages.length > 0  && mungedLanguages.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell className={classes.cell} component=\"th\" scope=\"row\">\r\n                  {row['g1Language']}\r\n                </TableCell>\r\n                <TableCell className={classes.cell}>{row['g2Language']}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(LanguageCompareTable);\r\n\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport queryString from 'query-string';\r\nimport data from '../data/data.json'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n});\r\nclass GuildPicker extends Component {\r\n  state = {\r\n    guild: 'enforcer',\r\n    subguild: 'hunter',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild\r\n    } = queryString.parse(location.search);\r\n\r\n    if (data.guilds[guild]) {\r\n      this.setState({ guild });\r\n    }\r\n    if (data.subguilds[subguild]) {\r\n      this.setState({ subguild });\r\n    }\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    const {\r\n      guild,\r\n      subguild\r\n    } = this.state;\r\n    const newQuery = queryString.stringify({\r\n      ...{\r\n        guild,\r\n        subguild,\r\n      },\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    const {\r\n      history,\r\n      location: {\r\n        pathname = '/'\r\n      } = {}\r\n    } = this.props;\r\n    history.push({\r\n      pathname,\r\n      search: newQuery,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild,\r\n      subguild,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild\",\r\n      g2Label: \"Subguild\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"subguild\",\r\n      g1Value: guild,\r\n      g2Value: subguild,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justifyContent=\"center\" spacing={2} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild',\r\n                  id: 'guild-select',\r\n                }}\r\n              >\r\n                {data.sortedguilds.map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.guilds[this.state.guild].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.guilds[this.state.guild].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Subguild</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.subguild}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'subguild',\r\n                  id: 'subguild-select',\r\n                }}\r\n              >\r\n                {data.sortedsubguilds.map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.subguilds[gKey].label}\r\n                    {data.subguilds[gKey].karma ? ` (${data.subguilds[gKey].karma} karma)` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.subguilds[this.state.subguild].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.subguilds[this.state.subguild].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justifyContent=\"center\" spacing={2} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={2} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildPicker);\r\n","import React, { Component }from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport queryString from 'query-string';\r\nimport data from '../data/data.json'\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport SkillCompareTable from './SkillCompareTable';\r\nimport PerkCompareTable from './PerkCompareTable';\r\nimport LanguageCompareTable from './LanguageCompareTable';\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    flexGrow: 1,\r\n  },\r\n  formControl: {\r\n    width: 'calc(100% - 1rem)',\r\n    marginRight: '1rem',\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n});\r\nclass GuildCompare extends Component {\r\n  state = {\r\n    guild1: 'enforcer',\r\n    guild2: 'infiltrator',\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {\r\n      location\r\n    } = this.props;\r\n    const {\r\n      guild1,\r\n      guild2\r\n    } = queryString.parse(location.search);\r\n\r\n    if (data.guilds[guild1]) {\r\n      this.setState({ guild1 });\r\n    }\r\n    if (data.guilds[guild2]) {\r\n      this.setState({ guild2 });\r\n    }\r\n  }\r\n\r\n  toggleSelection = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    const {\r\n      guild1,\r\n      guild2\r\n    } = this.state;\r\n    const newQuery = queryString.stringify({\r\n      ...{\r\n        guild1,\r\n        guild2,\r\n      },\r\n      [event.target.name]: event.target.value,\r\n    });\r\n    const {\r\n      history,\r\n      location: {\r\n        pathname = '/'\r\n      } = {}\r\n    } = this.props;\r\n    history.push({\r\n      pathname,\r\n      search: newQuery,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      classes\r\n    } = this.props;\r\n    const {\r\n      guild1,\r\n      guild2,\r\n    } = this.state;\r\n    const tableConfig = {\r\n      g1Label: \"Guild 1\",\r\n      g2Label: \"Guild 2\",\r\n      g1Key: \"guild\",\r\n      g2Key: \"guild\",\r\n      g1Value: guild1,\r\n      g2Value: guild2,\r\n    };\r\n    return (\r\n      <>\r\n        <Grid container justifyContent=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild 1</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                value={this.state.guild1}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild1',\r\n                  id: 'guild1-select',\r\n                }}\r\n              >\r\n                {data.sortedguilds.map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.guilds[this.state.guild1].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.guilds[this.state.guild1].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <FormHelperText>Guild 2</FormHelperText>\r\n            <FormControl className={classes.formControl}>\r\n              <Select\r\n                className={classes.select}\r\n                value={this.state.guild2}\r\n                onChange={this.toggleSelection}\r\n                inputProps={{\r\n                  name: 'guild2',\r\n                  id: 'guild2-select',\r\n                }}\r\n              >\r\n                {data.sortedguilds.map(gKey => (\r\n                  <MenuItem value={gKey}>\r\n                    {data.guilds[gKey].label}\r\n                    {data.guilds[gKey].karma ? ` (${data.guilds[gKey].karma})` : ''}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n              <FormHelperText>\r\n                <span>Documentation: </span>\r\n                <a\r\n                  className={classes.link}\r\n                  href={data.guilds[this.state.guild2].documentation}\r\n                  target=\"_blank\"\r\n                >\r\n                  {data.guilds[this.state.guild2].documentation}\r\n                </a>\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container justifyContent=\"center\" spacing={16} className={classes.container}>\r\n          <Grid item xs={12} lg={6}>\r\n            <SkillCompareTable\r\n              {...tableConfig}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} lg={6}>\r\n            <Grid container spacing={16} className={classes.container}>\r\n              <Grid item xs={12}>\r\n                <PerkCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LanguageCompareTable\r\n                  {...tableConfig}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles)(GuildCompare);\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport data from '../data/data.json';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = (theme) => ({\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    padding: 6,\r\n  },\r\n  skillGroupTitle: {\r\n    fontSize: 18,\r\n    padding: 20,\r\n    textTransform: 'capitalize',\r\n  },\r\n  guildOptionText: {\r\n    padding: '0 20px',\r\n  },\r\n  guildOptionLink: {\r\n    color: '#ffffff5e'\r\n  },\r\n  selectedCount: {\r\n    color: '#ffffff5e'\r\n  },\r\n  chipContainer: {\r\n    padding: '0 20px'\r\n  },\r\n  chip: {\r\n    margin: '0 4px 4px 0',\r\n  },\r\n  clearSelected: {\r\n    float: 'right',\r\n  }\r\n});\r\nclass SkillPicker extends Component {\r\n  state = {\r\n    selectedSkills: [],\r\n    guilds: [],\r\n    subguilds: [],\r\n  }\r\n\r\n  componentWillMount() {\r\n    for (let guildGroup of ['guilds', 'subguilds']) {\r\n      const guilds = data[guildGroup] ? Object.keys(data[guildGroup]) : [];\r\n      const result = [];\r\n      for (let guild of guilds) {\r\n        result.push({\r\n          key: guild,\r\n          label: data[guildGroup][guild].label,\r\n          skills: this.flattenGuild(guildGroup, guild),\r\n          perks: data[guildGroup][guild].perks,\r\n          karma: data[guildGroup][guild].karma,\r\n        });\r\n      }\r\n      this.setState({\r\n        [guildGroup]: result\r\n      })\r\n    }\r\n  }\r\n\r\n  flattenGuild = (guildGroup, guild) => {\r\n    let result = [];\r\n    for (let skillPrefix of ['', 'ex']) {\r\n      for (let profLevel of ['languages', ...data.proficiencies]) {\r\n        if (data[guildGroup][guild][`${skillPrefix}${profLevel}`]) {\r\n          result = [...data[guildGroup][guild][`${skillPrefix}${profLevel}`], ...result]\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toggleSelection = (event, skill) => {\r\n    const {\r\n      selectedSkills\r\n    } = this.state;\r\n\r\n    const itemIndex = selectedSkills.indexOf(skill)\r\n    if (itemIndex === -1) {\r\n      this.setState({ selectedSkills: [skill, ...selectedSkills]})\r\n    } else {\r\n      selectedSkills.splice(itemIndex, 1);\r\n      this.setState({ selectedSkills: [...selectedSkills]})\r\n    }\r\n  }\r\n\r\n  clearSelection = () => {\r\n    this.setState({ selectedSkills: [] })\r\n  }\r\n\r\n  findGuildsForSkills = () => {\r\n    const result = [];\r\n    for (let guild of this.state.guilds) {\r\n      for (let subguild of this.state.subguilds) {\r\n        let skillsMatched = 0;\r\n        for (let skill of this.state.selectedSkills) {\r\n          if (\r\n            guild.skills.includes(skill)\r\n            || subguild.skills.includes(skill)\r\n            || guild.perks.includes(skill)\r\n            || subguild.perks.includes(skill)\r\n          ) {\r\n            skillsMatched++;\r\n          }\r\n        }\r\n\r\n        if (skillsMatched === this.state.selectedSkills.length) {\r\n          const karmaLabel = (guild.karma || subguild.karma) ? ` (${guild.karma + subguild.karma})` : '';\r\n          result.push({\r\n            label: `${guild.label}/${subguild.label}${karmaLabel}`,\r\n            linkTo: `/arma-guild-picker/?guild=${guild.key}&subguild=${subguild.key}`\r\n          })\r\n        }\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  render () {\r\n    const {\r\n      classes,\r\n    } = this.props;\r\n    const {\r\n      selectedSkills,\r\n    } = this.state;\r\n    return (\r\n      <Grid container justifyContent=\"center\" spacing={2} className={classes.container}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper square>\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6}>\r\n                <Typography className={classes.sectionTitle}>\r\n                  Skills\r\n                  {' '}\r\n                  <span className={classes.selectedCount}>({selectedSkills.length} selected)</span>\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                {selectedSkills.length > 0 && (<Button\r\n                  size=\"small\"\r\n                  className={classes.clearSelected}\r\n                  onClick={() => this.clearSelection()}\r\n                >\r\n                  Clear\r\n                </Button>)}\r\n              </Grid>\r\n              </Grid>\r\n            {['languages', 'perks', ...data.skillGroups].map(skillGroup => (\r\n              <>\r\n                <Typography className={classes.skillGroupTitle}>{skillGroup}</Typography>\r\n                <div className={classes.chipContainer}>\r\n                  {Object.keys(data.skills[skillGroup]).map((key) => (\r\n                    <Chip\r\n                      className={classes.chip}\r\n                      onClick={(event) => this.toggleSelection(event, key)}\r\n                      label={data.skills[skillGroup][key].label}\r\n                      color={selectedSkills.includes(key) ? 'primary' : ''}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper square>\r\n            <Typography className={classes.sectionTitle}>\r\n              Matching Guild\r\n              {' '}\r\n              <span className={classes.selectedCount}>(Click to View in Guild Picker)</span>\r\n            </Typography>\r\n            <Grid container justifyContent=\"center\" spacing={2} className={classes.container}>\r\n              {this.findGuildsForSkills().map(guildCombination => (\r\n                <Grid item xs={12} sm={6} className={classes.guildOption}>\r\n                  <Link to={guildCombination.linkTo} className={classes.guildOptionLink}>\r\n                    <Typography className={classes.guildOptionText}>\r\n                      {guildCombination.label}\r\n                    </Typography>\r\n                  </Link>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SkillPicker);\r\n","const theme = {\r\n  \"palette\": {\r\n    \"type\": \"dark\",\r\n    \"primary\": {\r\n      \"main\": \"#d84315\",\r\n      \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\r\n    },\r\n    \"secondary\": {\r\n      \"main\": \"#5d4037\"\r\n    },\r\n    \"primary1Color\": \"#d84315\",\r\n    \"primary2Color\": \"#5d4037\",\r\n    \"accent1Color\": \"#eeeeee\",\r\n    \"accent2Color\": \"rgba(255, 236, 179, 0.3)\",\r\n    \"accent3Color\": \"#ff8f00\"\r\n  },\r\n  \"tabs\": {\r\n    \"backgroundColor\": \"#e64a19\",\r\n    \"textColor\": \"rgba(33, 33, 33, 0.54)\"\r\n  },\r\n  \"tableRow\": {\r\n    \"selectedColor\": \"rgba(255, 255, 255, 0.1)\",\r\n    \"hoverColor\": \"rgba(255, 236, 179, 0.15)\"\r\n  },\r\n  \"toggle\": {\r\n    \"thumbOffColor\": \"rgba(255, 236, 179, 0.51)\",\r\n    \"labelDisabledColor\": \"rgba(255, 255, 255, 0.29)\",\r\n    \"thumbDisabledColor\": \"rgba(255, 255, 255, 0.48)\"\r\n  }\r\n};\r\nexport default theme;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Layout from './components/Layout'\r\nimport GuildPicker from './components/GuildPicker'\r\nimport GuildCompare from './components/GuildCompare'\r\nimport SkillPicker from './components/SkillPicker'\r\nimport { MuiThemeProvider, createTheme } from '@material-ui/core/styles';\r\nimport themeOverrides from './theme.js';\r\nconst theme = createTheme(themeOverrides);\r\n\r\nfunction App() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Router>\r\n        <Layout>\r\n          <Route path=\"/arma-guild-picker/\" exact component={GuildPicker} />\r\n          <Route path=\"/arma-guild-picker/guild-picker/\" component={GuildPicker} />\r\n          <Route path=\"/arma-guild-picker/guild-compare/\" component={GuildCompare} />\r\n          <Route path=\"/arma-guild-picker/skill-picker/\" component={SkillPicker} />\r\n        </Layout>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}